
01-理解代码

你是一位java资深开发工程师，请你解释下面代码的意图
...
	public void add(Object element) {
		if (!readOnly) {
			int newSize = size + 1;
			if (newSize > elements.length) {
				Object[] newElements = new Object[elements.length + 10];
				for (int i = 0; i < size; i++)
					newElements[i] = elements[i];
				elements = newElements;
			}
			elements[size++] = element;
		}
	}
...



你是一位java资深开发工程师，请你解释下面代码的意图
...
public boolean wrongAnswer(){
		System.out.println("Question was incorrectly answered");
		System.out.println(players.get(currentPlayer)+ " was sent to the penalty box");
		inPenaltyBox[currentPlayer] = true;
		
		currentPlayer++;
		if (currentPlayer == players.size()) currentPlayer = 0;
		return true;
	}
...





你是一位python 资深开发工程师，请你解释下面代码的意图
...
def sort_point(points):
	sp = sorted(points, key=lambda x: (int(x[1]), int(x[0])))
	if sp[0][0] > sp[1][0]:
		sp[0], sp[1] = sp[1], sp[0]
	if sp[2][0] > sp[3][0]:
		sp[2], sp[3] = sp[3], sp[2]
	return sp
...


你是一位java资深开发工程师，请你解释下面代码的意图
...
public void roll(int roll) {
		System.out.println(players.get(currentPlayer) + " is the current player");
		System.out.println("They have rolled a " + roll);
		
		if (inPenaltyBox[currentPlayer]) {
			if (roll % 2 != 0) {
				isGettingOutOfPenaltyBox = true;
				
				System.out.println(players.get(currentPlayer) + " is getting out of the penalty box");
				places[currentPlayer] = places[currentPlayer] + roll;
				if (places[currentPlayer] > 11) places[currentPlayer] = places[currentPlayer] - 12;
				
				System.out.println(players.get(currentPlayer) 
						+ "'s new location is " 
						+ places[currentPlayer]);
				System.out.println("The category is " + currentCategory());
				askQuestion();
			} else {
				System.out.println(players.get(currentPlayer) + " is not getting out of the penalty box");
				isGettingOutOfPenaltyBox = false;
				}
			
		} else {
		
			places[currentPlayer] = places[currentPlayer] + roll;
			if (places[currentPlayer] > 11) places[currentPlayer] = places[currentPlayer] - 12;
			
			System.out.println(players.get(currentPlayer) 
					+ "'s new location is " 
					+ places[currentPlayer]);
			System.out.println("The category is " + currentCategory());
			askQuestion();
		}
		
	}
...





你是一位java资深开发工程师，请你解释下面代码的意图, 请逐行解释每行代码的意图
...
02public void execute(RecordSet records, PrintWriter output) throws IOException {
03      allPositions = new BigDecimal("0.00");
04      assetToGroup = new HashMap<String, String>();
05      for (int row = 0; row < records.getRowCount(); row++) {
06         BigDecimal pos = new BigDecimal(1);
07         BigDecimal r = new BigDecimal("0.00");
08         String issue = new String("");
09         issue = records.getItem(row, "ISSUE_NAME");
10         if (records.getItem(row, "ISSUE_FAMILY").toUpperCase().startsWith("FUND")) {
11         BigDecimal perItem = records.getDecimal(row, "MARKET_PRICE").subtract(records.getDecimal(row, "TERM_ONE"));
12            pos = perItem.multiply(records.getDecimal(row, "QUANTITY")).setScale(2, BigDecimal.ROUND_HALF_UP);
13            BigDecimal riskCoefficient = assessor.getRiskCoefficient(records.getItem(row, "ISSUE_FAMILY"), records
14                  .getDecimal(row, "TERM_TWO"));
15            BigDecimal product = riskCoefficient.multiply(pos);
16            r = product.divide(new BigDecimal("100.00"), 2, BigDecimal.ROUND_HALF_UP);
17            positions.put(issue, pos);         }
18         else {
19            pos = records.getDecimal(row, "QUANTITY").multiply(records.getDecimal(row, "MARKET_PRICE"));
20            pos = pos.subtract(records.getDecimal(row, "TERM_ONE")).setScale(2, BigDecimal.ROUND_HALF_UP);
21            BigDecimal product = records.getDecimal(row, "TERM_TWO").multiply(pos);
22            r = product.divide(new BigDecimal("100.00"), 2, BigDecimal.ROUND_HALF_UP);
23            positions.put(issue, pos);
24         }
25         allPositions = allPositions.add(positions.get(issue));         
26         String group = records.getItem(row, "ISSUE_GROUP");
27         String name = records.getItem(row, "ISSUE_NAME");
28         assetToGroup.put(name, group);
29         BigDecimal value = new BigDecimal("0");
30         if (groupTotal.containsKey(group))
31            value = value.add(groupTotal.get(group)).setScale(2);
32         value = value.add(positions.get(issue));
33         groupTotal.put(group, value.setScale(2));
34         m_hmRiskTable.put(issue, r);
35      }      
        output.write("<groups>\n");
36      Iterator<String> g = groupTotal.keySet().iterator();
37      while (g.hasNext()) {
38         String grp = g.next();
39         BigDecimal position = groupTotal.get(grp);
40         BigDecimal product = position.multiply(new BigDecimal(100));
41         BigDecimal weight = product.divide(allPositions, 2, BigDecimal.ROUND_HALF_UP);
42         output.write("\t<group position='" + position.toPlainString());
43         output.write("' weight='" + weight);
44         output.write("'>\n");
45         output.write("\t\t" + grp + "\n");
46         Iterator<String> i = positions.keySet().iterator();
47         boolean notFirstOne = false;
48         while (i.hasNext()) {
49            String asset = i.next();
50            if (assetToGroup.get(asset).equalsIgnoreCase(grp)) {
51               if (notFirstOne)
52                  output.write("\n");
53               output.write("\t\t<asset position='" + positions.get(asset).toPlainString() + "' ");
54               BigDecimal p = positions.get(asset);
55             BigDecimal weight1 = p.multiply(new BigDecimal("100.00")).divide(position, 2, BigDecimal.ROUND_HALF_UP)
56                     .setScale(2);
57               output.write("weight='" + weight1 + "' risk='" + m_hmRiskTable.get(asset).toPlainString() + "'>\n");
58               output.write("\t\t\t" + asset + "\n");
59               output.write("\t\t</asset>");
60               notFirstOne = true;
61            }
62         }
63         output.write("\n\t</group>\n");
64      }
65      output.write("</groups>\n");
66   }
...
