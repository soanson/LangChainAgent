https://leetcode.cn/problems/dui-lie-de-zui-da-zhi-lcof/description/

LCR 184. 设计自助结算系统

请设计一个自助结账系统，该系统需要通过一个队列来模拟顾客通过购物车的结算过程，需要实现的功能有：

get_max()：获取结算商品中的最高价格，如果队列为空，则返回 -1
add(value)：将价格为 value 的商品加入待结算商品队列的尾部
remove()：移除第一个待结算的商品价格，如果队列为空，则返回 -1
注意，为保证该系统运转高效性，以上函数的均摊时间复杂度均为 O(1)

 
java 参考实现代码：
class Checkout {

    public Checkout() {

    }
    
    public int get_max() {

    }
    
    public void add(int value) {

    }
    
    public int remove() {

    }
}

/**
 * Your Checkout object will be instantiated and called as such:
 * Checkout obj = new Checkout();
 * int param_1 = obj.get_max();
 * obj.add(value);
 * int param_3 = obj.remove();
 */

提示：
1 <= get_max, add, remove 的总操作数 <= 10000
1 <= value <= 10^5



C++ 参考实现
class Checkout {
public:
    Checkout() {

    }
    
    int get_max() {

    }
    
    void add(int value) {

    }
    
    int remove() {

    }
};

/**
 * Your Checkout object will be instantiated and called as such:
 * Checkout* obj = new Checkout();
 * int param_1 = obj->get_max();
 * obj->add(value);
 * int param_3 = obj->remove();
 */


C#代码
public class Checkout {

    public Checkout() {

    }
    
    public int Get_max() {

    }
    
    public void Add(int value) {

    }
    
    public int Remove() {

    }
}

/**
 * Your Checkout object will be instantiated and called as such:
 * Checkout obj = new Checkout();
 * int param_1 = obj.Get_max();
 * obj.Add(value);
 * int param_3 = obj.Remove();
 */

示例 1：

输入: 
["Checkout","add","add","get_max","remove","get_max"]
[[],[4],[7],[],[],[]]

输出: [null,null,null,7,4,7]


示例 2：
输入: 
["Checkout","remove","get_max"]
[[],[],[]]

输出: [null,-1,-1]
 

1：作业要求
1：实现类的代码

2：完成测试用例设计

3:完成单元测试

4：利用AI模型做代码审查
